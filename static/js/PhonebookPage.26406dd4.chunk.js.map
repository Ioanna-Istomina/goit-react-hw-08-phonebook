{"version":3,"file":"static/js/PhonebookPage.26406dd4.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","redux/contacts/selectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/PhonebookPage.js"],"sourcesContent":["import { useState } from 'react';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = ev => {\n    const { name, value } = ev.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n\n    const contact = {\n      name,\n      number,\n    };\n\n    onSubmit(contact);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"container d-flex justify-content-start flex-column col-md-3\"\n    >\n      <label className=\"form-label\">\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleInputChange}\n          className=\"form-control\"\n        />\n      </label>\n      <label className=\"form-label\">\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleInputChange}\n          className=\"form-control\"\n        />\n      </label>\n      <button type=\"submit\" className=\"btn btn-success\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const contactSelector = state => state.contacts;\nexport const filterSelector = state => state.filter;\n\nexport const filterContacts = (state, contacts) => {\n  const filter = filterSelector(state);\n  const normalizeFilter = filter?.toLowerCase();\n  return contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(normalizeFilter)\n  );\n};\n","import * as React from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/contacts/selectors';\nimport { useDeleteContactMutation, useGetContactsQuery } from '../../redux/API';\n\nconst ContactList = () => {\n  const { data: allContacts } = useGetContactsQuery();\n  const contacts = useSelector(state => filterContacts(state, allContacts));\n  const [deleteContact] = useDeleteContactMutation();\n\n  return (\n    <>\n      {contacts?.length === 0 ? (\n        'Phone book is empty'\n      ) : (\n        <ul className=\"list-group gap-2 ms-5 \">\n          {contacts?.map(({ name, number, id }) => (\n            <li\n              key={id}\n              className=\"list-group-item col-md-3 pb-0 bg-light border\"\n            >\n              <p className=\"mb-0\">\n                {name}: <span>{number}</span>\n                <IconButton\n                  aria-label=\"delete\"\n                  id={id}\n                  onClick={() => deleteContact(id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterSelector } from 'redux/contacts/selectors';\nimport { filterContact } from '../../redux/contacts/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => filterSelector(state));\n  //changeFilter\n  const changeFilter = ev => {\n    const inputValue = ev.currentTarget.value;\n    dispatch(filterContact(inputValue));\n  };\n\n  return (\n    <form className=\"ms-5\">\n      <label className=\"form-label\">\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={changeFilter}\n          className=\"form-control\"\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../components/ContactForm/';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport { useGetContactsQuery, useAddContactsMutation } from '../redux/API';\n\nconst PhonebookPage = () => {\n  const { data } = useGetContactsQuery();\n\n  const [createContact] = useAddContactsMutation();\n\n  const formSubmit = contact => {\n    if (data.some(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    createContact(contact);\n  };\n  return (\n    <div>\n      <h1 style={{ marginLeft: '40px' }}>Phonebook</h1>\n      <ContactForm onSubmit={formSubmit} />\n\n      <h2 style={{ marginLeft: '40px' }}>Contacts</h2>\n      <Filter />\n      {data && <ContactList />}\n    </div>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["onSubmit","useState","name","setName","number","setNumber","handleInputChange","ev","currentTarget","value","reset","preventDefault","className","type","pattern","title","required","onChange","filterSelector","state","filter","allContacts","useGetContactsQuery","data","contacts","useSelector","normalizeFilter","toLowerCase","contact","includes","filterContacts","useDeleteContactMutation","deleteContact","length","map","id","IconButton","onClick","Delete","dispatch","useDispatch","inputValue","filterContact","useAddContactsMutation","createContact","style","marginLeft","some","alert"],"sourceRoot":""}